# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
            # setup-buildxaction 将默认使用docker-container 构建器驱动程序创建和引导构建器。非必需
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # 登录到阿里云容器镜像服务
      - name: Login to Aliyun Docker
        uses: aliyun/acr-login@v1
        # 配置登录信息，secrets 变量在 github settings -> secrets 中设置
        with:
          login-server: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.PASS_WORD }}
      # Build and Push
      - name: Build Producer and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: .
          push: true
          tags: registry.cn-hangzhou.aliyuncs.com/kubernetes-study/argo:latest

      
#       - name: Docker Login
#         uses: aliyun/acr-login@v1
#         with:
#           login-server: 
#           region-id: cn-hangzhou
#           username: ${{ secrets.USER_NAME }}
#           password: ${{ secrets.PASS_WORD }}
# #           logout: true

      # Runs a set of commands using the runners shell
#       - name: build image
#         run: |
#           make image
#           docker push registry.cn-hangzhou.aliyuncs.com/kubernetes-study/argo:latest

      - name: Trigger CI
        uses: InformaticsMatters/trigger-ci-action@1.0.1
        with:
          ci-owner: rongpengju1209
          ci-repository: flask-demo-kustomize
          ci-ref: refs/heads/master
          ci-user: rongpengju1209
          ci-user-token: ${{ secrets.CI_TOKEN }}
          ci-name: CI
          ci-inputs: >-
            image=registry.cn-hangzhou.aliyuncs.com/kubernetes-study/argo
            sha-tag=latest
